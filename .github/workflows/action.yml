name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

env:
  DOCKER_IMAGE: meanori/organization-management-frontend
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-push-dev:
    name: Build and push to dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Run Docker build
      run: |
        docker build --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} --no-cache -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .

    - name: Tag Docker image as dev
      run: |
        docker tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }} ${{ env.DOCKER_IMAGE }}:dev

    - name: Push to Docker Hub with commit tag
      run: |
        docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    - name: Push to Docker Hub with dev tag
      run: |
        docker push ${{ env.DOCKER_IMAGE }}:dev
    
  deploy-production:
    name: Deploy to production
    if: startsWith(github.event_name, 'release')
    runs-on: self-hosted

    steps:
    - name: Get Release Tag
      id: get-tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Deploy to production
      run: |
        sudo docker pull ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
        # Add your deployment commands here, e.g.:
        # sudo docker run -d ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
